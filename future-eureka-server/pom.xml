<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.unionbankng.future</groupId>
	<artifactId>future-eureka-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>future-eureka-server</name>
	<description>Eureka Server for Project Future</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>Hoxton.SR7</spring-cloud.version>
		<docker.image.prefix>marcusms.azurecr.io</docker.image.prefix>
		<jib-maven-plugin.version>2.5.2</jib-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>

			<plugin>
				<artifactId>jib-maven-plugin</artifactId>
				<groupId>com.google.cloud.tools</groupId>
				<version>${jib-maven-plugin.version}</version>
				<configuration>
					<from>
						<image>adoptopenjdk/openjdk11:alpine-jre-nightly</image>
					</from>
					<to>
						<auth>
							<!--suppress UnresolvedMavenProperty -->
							<username>${ACR_USERNAME}</username>
							<!--suppress UnresolvedMavenProperty -->
							<password>${ACR_PASSWORD}</password>
						</auth>
						<!--suppress UnresolvedMavenProperty -->
						<image>${ACR_SERVER}/${project.artifactId}</image>
					</to>
					<container>
						<environment>
							<!--suppress UnresolvedMavenProperty -->
							<APP_ENV>${APP_ENV}</APP_ENV>
						</environment>
					</container>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
